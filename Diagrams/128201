format 222
"commandLineProcessing" // balancedbanana::client::commandLineProcessing
  revision 6
  modified_by 73 "Thomas"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  classview 141129 "classes"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 128073 "CommandLineProcessor"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Verarbeitet die Eingabe der Befehlszeile und hinterlegt die Eingaben in einer JobConfig Instanz
JobConfig liest Standardwerte aus einer Datei ein
Diese werden durch die auf der Befehlszeile gegebenen Argumente ergänzt oder ersetzt
"
      operation 128073 "process"
	public explicit_return_type "Task"
	nparams 2
	  param in name "argv" explicit_type "char**"
	  param in name "argc" explicit_type "int*"
	
	
	
	
	
	comment "Verarbeitet Argumente der Befehlszeile.
Weist jedem Argument zuerst den auf der Befehlszeile spezifizierten Wert, dann den vom Benutzer in einer Konfigurationsdatei hinterlegten Wert zu.
Argumente, die nicht auf der Befehlszeile oder in der Konfigurationsdatei vorhanden sind, werden von dem Server mit Standardwerten verfollstï¿½ndigt.

argv: Array der Bezeichner sowie Werte der Argumente
argc: Anzahl der Eintrï¿½ge in argv

return: Einen Task, in dem die Argumente mit zugehï¿½rigen Werten abgelegt sind."
      end

      operation 128201 "preProcess"
	private explicit_return_type ""
	nparams 3
	  param in name "argv" explicit_type "char**"
	  param in name "argc" explicit_type "int*"
	  param in name "task" explicit_type "std::shared_ptr<Task>"
	
	
	
	
	
	comment "Baut aus den ï¿½bergebenen Argumenten einen Task auf.
Hierbei werden komplexe Argumente von den eigentlichen Argumenten getrennt (z.B. wird der Aufgaben Startbefehl von den Argumenten unseres Programms abgetrennt, damit dies nicht zu Problemen in spï¿½teren Verarbeitungsschritten fï¿½hrt).

argv: Array der Bezeichner und Werte der Argumente
argc: Anzahl der Eintrï¿½ge in argv
task: Leere Instanz einer Aufgabe, die mit den komplexen Argumenten befï¿½llt wird."
      end

      operation 128585 "mainProcess"
	private explicit_return_type ""
	nparams 3
	  param in name "argv" explicit_type "char**"
	  param in name "argc" explicit_type "int*"
	  param in name "task" explicit_type "std::shared_ptr<Task>"
	
	
	
	
	
	comment "Wertet die Argumente der Befehlszeile aus und speichert sie in einer Aufgabe.

argv: Array der Bezeichner und Werte der Argumente
argc: Anzahl der Eintrï¿½ge in argv
task: Datenheltestruktur, in die mithilfe einer setValue Operation die Werte den Argumenten zugewiesen werden"
      end

      operation 128713 "postProcess"
	private explicit_return_type ""
	nparams 1
	  param in name "task" explicit_type "std::shared_ptr<Task>"
	
	
	
	
	
	comment "Ergï¿½nzt Argumente mit Werten aus der Konfigurationsdatei des Benutzers.
Macht bei Bedarf erkenntlich, dass ein Argument keinen Wert erhalten hat.

task: Die Aufgabe, in der die auf der Befehlszeile angegebenen Argumente bereits abgelegt sind und die nun um die Argumente in der Konfigurationsdatei erweitert werden."
      end

      classrelation 157001 // <dependency>
	relation 156617 -_->
	  a public
	    cpp default "#include in source"
	    classrelation_ref 157001 // <dependency>
	  b parent class_ref 128201 // Task
      end
    end

    class 128201 "Task"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Enthält Informationen über die Anfrage des Benutzers auf der Befehlszeile, wie etwa um was für eine Art von Anfrage es sich handelt (Neue Aufgabe oder mit einer existierenden arbeiten, ...)"
      attribute 165065 "taskCommand"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Startbefehl für die eingereichte Aufgabe"
      end

      classrelation 157129 // config (<unidirectional association>)
	relation 156745 --->
	  a role_name "config" multiplicity "1" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 157129 // config (<unidirectional association>)
	  b parent class_ref 135722 // JobConfig
      end

      attribute 165193 "type"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Gibt an, um was für eine Form von Anfrage es sich handelt (Starte neue Aufgabe oder frage etwas über eine existierende Aufgabe ab)"
      end

      operation 169673 "getType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${typeprefix}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 169801 "setType"
	public explicit_return_type "void"
	nparams 1
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${typeprefix}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 169929 "getConfig"
	public return_type class_ref 135722 // JobConfig
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${typeprefix}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 170057 "getTaskCommand"
	public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${typeprefix}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 170185 "setTaskCommand"
	public explicit_return_type "void"
	nparams 1
	  param in name "taskCommand" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${typeprefix}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

  end
end
