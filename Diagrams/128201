format 222
"commandLineProcessing" // balancedbanana::client::commandLineProcessing
  revision 4
  modified_by 121 "christopher"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  classview 141129 "classes"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 128073 "CommandLineProcessor"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Hauptverarbeitungseinheit für Eingaben auf der Befehlszeile.
Nimmt die Argumente der Befehlszeile entgegen und konstruiert eine Aufgabe."
      operation 128073 "process"
	public return_type class_ref 128201 // Task
	nparams 2
	  param in name "argv" explicit_type "char**"
	  param in name "argc" explicit_type "int*"
	
	
	
	
	
	comment "Verarbeitet Argumente der Befehlszeile.
Weist jedem Argument zuerst den auf der Befehlszeile spezifizierten Wert, dann den vom Benutzer in einer Konfigurationsdatei hinterlegten Wert zu.
Argumente, die nicht auf der Befehlszeile oder in der Konfigurationsdatei vorhanden sind, werden von dem Server mit Standardwerten verfollständigt.

argv: Array der Bezeichner sowie Werte der Argumente
argc: Anzahl der Einträge in argv

return: Einen Task, in dem die Argumente mit zugehörigen Werten abgelegt sind."
      end

      operation 128201 "preProcess"
	private explicit_return_type ""
	nparams 3
	  param in name "argv" explicit_type "char**"
	  param in name "argc" explicit_type "int*"
	  param in name "task" explicit_type "Task*"
	
	
	
	
	
	comment "Baut aus den übergebenen Argumenten einen Task auf.
Hierbei werden komplexe Argumente von den eigentlichen Argumenten getrennt (z.B. wird der Aufgaben Startbefehl von den Argumenten unseres Programms abgetrennt, damit dies nicht zu Problemen in späteren Verarbeitungsschritten führt).

argv: Array der Bezeichner und Werte der Argumente
argc: Anzahl der Einträge in argv
task: Leere Instanz einer Aufgabe, die mit den komplexen Argumenten befüllt wird."
      end

      operation 128585 "mainProcess"
	private explicit_return_type ""
	nparams 3
	  param in name "argv" explicit_type "char**"
	  param in name "argc" explicit_type "int*"
	  param in name "task" explicit_type "Task*"
	
	
	
	
	
	comment "Wertet die Argumente der Befehlszeile aus und speichert sie in einer Aufgabe.

argv: Array der Bezeichner und Werte der Argumente
argc: Anzahl der Einträge in argv
task: Datenheltestruktur, in die mithilfe einer setValue Operation die Werte den Argumenten zugewiesen werden"
      end

      operation 128713 "postProcess"
	private explicit_return_type ""
	nparams 1
	  param in name "task" explicit_type "Task*"
	
	
	
	
	
	comment "Ergänzt Argumente mit Werten aus der Konfigurationsdatei des Benutzers.
Macht bei Bedarf erkenntlich, dass ein Argument keinen Wert erhalten hat.

task: Die Aufgabe, in der die auf der Befehlszeile angegebenen Argumente bereits abgelegt sind und die nun um die Argumente in der Konfigurationsdatei erweitert werden."
      end

      classrelation 129225 // preProcessor (<unidirectional association>)
	relation 128713 --->
	  a role_name "preProcessor" multiplicity "1" private
	    classrelation_ref 129225 // preProcessor (<unidirectional association>)
	  b parent class_ref 128457 // PreProcessor
      end

      classrelation 129353 // mainProcessor (<unidirectional association>)
	relation 128841 --->
	  a role_name "mainProcessor" multiplicity "1" private
	    classrelation_ref 129353 // mainProcessor (<unidirectional association>)
	  b parent class_ref 128585 // MainProcessor
      end

      classrelation 129481 // postProcessor (<unidirectional association>)
	relation 128969 --->
	  a role_name "postProcessor" multiplicity "1" private
	    classrelation_ref 129481 // postProcessor (<unidirectional association>)
	  b parent class_ref 128713 // PostProcessor
      end

      classrelation 129737 // <dependency>
	relation 129225 -_->
	  a public
	    classrelation_ref 129737 // <dependency>
	  b parent class_ref 128201 // Task
      end
    end

    class 128201 "Task"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 128329 "setValue"
	public explicit_return_type "void"
	nparams 2
	  param in name "arg" explicit_type "Argument"
	  param in name "val" explicit_type "void*"
	
	
	
	
	
	comment "Setzt zu dem angegebenen Argument den spezifizierten Wert.

arg: Das Argument, dessen Wert gesetzt werden soll.
val: Neuer Wert des Arguments
"
      end

      operation 128457 "getValue"
	public explicit_return_type "void*"
	nparams 1
	  param in name "arg" explicit_type "Argument"
	
	
	
	
	
	comment "Gibt den Wert eines Arguments.

arg: Argument, dessen Wert betrachtet werden soll"
      end

      classrelation 129609 // <dependency>
	relation 129097 -_->
	  a public
	    classrelation_ref 129609 // <dependency>
	  b parent class_ref 128329 // Argument
      end

      operation 163017 "serialize"
	public explicit_return_type "char**"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${typeprefix}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Wandelt den Task in ein byte Array zum Übermitteln um"
      end
    end

    class 128329 "Argument"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
      php_decl "${comment}${visibility}final class ${name} {
${items}}
"
      python_2_2 python_decl "class ${name}:
${docstring}${members}
"
      idl_decl "${comment}enum ${name} {
${items}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Sammlung aller akzeptierten Argumente.
Die Liste variiert je nach Anwendung. Hier: Client"
      attribute 128073 "Priority"
	public type class_ref 128329 // Argument
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Die Priorität nach der die Aufgabe in der Warteschlange verarbeitet werden soll
"
      end

      attribute 128201 "MinCPUCount"
	public type class_ref 128329 // Argument
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Mindestanzahl der benötigten CPU Kerne für diese Aufgabe"
      end

      attribute 128329 "MaxCPUCount"
	public type class_ref 128329 // Argument
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Größte Anzahl an CPU Kernen, die diese Aufgabe verwenden kann.
Die Aufgabe kann womöglich auch mit weniger auskommen, wird aber nie mehr als diese Anzahl benötigen"
      end

      attribute 128457 "MinRAM"
	public type class_ref 128329 // Argument
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Mindestmenge an Arbeitsspeicher, der von dieser Aufgabe erfordert wird"
      end

      attribute 128585 "MaxRAM"
	public type class_ref 128329 // Argument
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Maximale Menge Arbeitsspeicher, der von dieser Aufgabe verwendet wird.
Die Aufgabe kann womöglich auch mit weniger auskommen, wird aber nie mehr als diese Menge benötigen"
      end

      attribute 128713 "Blocking"
	public type class_ref 128329 // Argument
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Gibt an, ob der Befehlszeilenaufruf blockieren soll, bis die Aufgabe beendet ist"
      end

      attribute 128841 "EMail"
	public type class_ref 128329 // Argument
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Gibt die EMail Adresse an, an die Abschlussinformationen der Aufgabe übermittelt werden soll
"
      end

      attribute 128969 "Image"
	public type class_ref 128329 // Argument
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Gibt das Standardimage für Docker an, welches für diese Aufgabe verwendet werden soll"
      end

      attribute 129097 "TaskStartCommand"
	public type class_ref 128329 // Argument
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Statbefehl dieser Aufgabe.
Dieser Befehl wird auf dem Arbeiter ausgeführt, um die Aufgabe zu starten"
      end

      attribute 129225 "addImage"
	public type class_ref 128329 // Argument
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Pfad zu neuem Docker Image, welches für den Benutzer als Standardimage zur Verfügung stehen soll"
      end

      attribute 129353 "removeImage"
	public type class_ref 128329 // Argument
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Entfernt eines der Standard Dockerimages die dem Nutzer zur Verfügung stehen"
      end

      attribute 129481 "StatusRequest"
	public type class_ref 128329 // Argument
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Gibt die AugabenID an, deren Ausführungsstatus ermittelt werden soll"
      end

      attribute 129609 "TailRequest"
	public type class_ref 128329 // Argument
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Gibt die AufgabenID an, deren neuste Ausgabe ermittelt werden soll"
      end

      attribute 129737 "StopRequest"
	public type class_ref 128329 // Argument
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Gibt die AufgabenID an, die Abgebrochen werden soll"
      end

      attribute 129865 "PauseRequest"
	public type class_ref 128329 // Argument
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Gibt die AufgabenID an, die pausiert werden soll
"
      end

      attribute 129993 "ResumeRequest"
	public type class_ref 128329 // Argument
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Gibt die AufgabenID an, die nach einer Pausierung Fortgesetzt werden soll"
      end

      attribute 130121 "BackupRequest"
	public type class_ref 128329 // Argument
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Gibt die AufgabenID an, von der eine Sicherung erstellt werden soll"
      end

      attribute 130249 "RestoreRequest"
	public type class_ref 128329 // Argument
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Gibt die AufgabenID an, die auf den Stand der letzten Verfügbaren Sicherung zurückgesetzt werden soll"
      end
    end

    class 128457 "PreProcessor"
      abstract visibility package 
      cpp_decl ""
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 128841 "preProcess"
	abstract cpp_virtual public explicit_return_type ""
	nparams 3
	  param in name "argv" explicit_type "char**"
	  param in name "argc" explicit_type "int*"
	  param in name "task" explicit_type "Task*"
	
	
	
	
	
	comment "Übernimmt die Vorbereitung der Befehlszeilenargumente.

Liefert: argv ist frei von problematischen Argumenten, argc entsprechend angepasst

argv: Befehlszeilenargumente (Bezeichner und Werte)
argc: Größe von argv
task: hier die komplexen Argumente einfügen"
      end
    end

    class 128585 "MainProcessor"
      abstract visibility package 
      cpp_decl ""
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 128969 "mainProcess"
	abstract cpp_virtual public explicit_return_type ""
	nparams 3
	  param in name "argv" explicit_type "char**"
	  param in name "argc" explicit_type "int*"
	  param in name "task" explicit_type "Task*"
	
	
	
	
	
	comment "Übernimmt die Hauptverarbeitung der Befehlszeilenargumente

Geht davon aus, dass kein Eintrag in argv unverarbeitbar ist

Liefert eine 1:1 Übersetzung von argv nach task

argv: Befehlszeilenargumente (Bezeichner und Werte)
argc: Größe von argv
task: hier die Argumente mit Werten einfügen"
      end
    end

    class 128713 "PostProcessor"
      abstract visibility package 
      cpp_decl ""
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 129097 "postProcess"
	abstract cpp_virtual public explicit_return_type ""
	nparams 1
	  param in name "task" explicit_type "Task*"
	
	
	
	
	
	comment "Übernimmt die Nachbereitung einer Aufgabe mithilfe einer Konfigurationsdatei

Geht davon aus, dass in task alle auf der Befehlszeile vorhandenen Argumente eingetragen sind.
Erwartet die Konfigurationsdatei in festem Format an fester Stelle

Liefert: fehlende Einträge in task sind mit Werten aus der Konfigurationsdatei aufgefüllt"
      end
    end
  end
end
